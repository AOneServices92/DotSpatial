//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Drawing;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace DotSpatial.Plugins.WebMap.Properties {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [DebuggerNonUserCode()]
    [CompilerGenerated()]
    internal class Resources {
        
        private static ResourceManager resourceMan;
        
        private static CultureInfo resourceCulture;
        
        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static ResourceManager ResourceManager {
            get {
                if (ReferenceEquals(resourceMan, null)) {
                    ResourceManager temp = new ResourceManager("DotSpatial.Plugins.WebMap.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bing Aerial Map.
        /// </summary>
        internal static string BingAerial {
            get {
                return ResourceManager.GetString("BingAerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bing Hybrid Map.
        /// </summary>
        internal static string BingHybrid {
            get {
                return ResourceManager.GetString("BingHybrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bing Street Map.
        /// </summary>
        internal static string BingRoads {
            get {
                return ResourceManager.GetString("BingRoads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Esri Hydro Base Map.
        /// </summary>
        internal static string EsriHydroBaseMap {
            get {
                return ResourceManager.GetString("EsriHydroBaseMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Esri World Imagery.
        /// </summary>
        internal static string EsriWorldImagery {
            get {
                return ResourceManager.GetString("EsriWorldImagery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Esri World Street Map.
        /// </summary>
        internal static string EsriWorldStreetMap {
            get {
                return ResourceManager.GetString("EsriWorldStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Esri World Topo.
        /// </summary>
        internal static string EsriWorldTopo {
            get {
                return ResourceManager.GetString("EsriWorldTopo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Labels.
        /// </summary>
        internal static string GoogleLabels {
            get {
                return ResourceManager.GetString("GoogleLabels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Map.
        /// </summary>
        internal static string GoogleMap {
            get {
                return ResourceManager.GetString("GoogleMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Terrain.
        /// </summary>
        internal static string GoogleTerrain {
            get {
                return ResourceManager.GetString("GoogleTerrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online Basemap.
        /// </summary>
        internal static string Legend_Title {
            get {
                return ResourceManager.GetString("Legend_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static Bitmap nodata {
            get {
                object obj = ResourceManager.GetObject("nodata", resourceCulture);
                return ((Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity: .
        /// </summary>
        internal static string Opacity_Box_Text {
            get {
                return ResourceManager.GetString("Opacity_Box_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change opacity of the basemap layer..
        /// </summary>
        internal static string Opacity_Box_ToolTip {
            get {
                return ResourceManager.GetString("Opacity_Box_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Street Map.
        /// </summary>
        internal static string OpenStreetMap {
            get {
                return ResourceManager.GetString("OpenStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online Basemap.
        /// </summary>
        internal static string Panel_Name {
            get {
                return ResourceManager.GetString("Panel_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change online basemap service..
        /// </summary>
        internal static string Service_Box_ToolTip {
            get {
                return ResourceManager.GetString("Service_Box_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WMS.
        /// </summary>
        internal static string WMSMap {
            get {
                return ResourceManager.GetString("WMSMap", resourceCulture);
            }
        }
    }
}
